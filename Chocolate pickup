Question link- https://bit.ly/3KQELfy

Solution:

import java.util.* ;
import java.io.*; 
public class Solution {
    public static int f(int i , int j1, int j2 , int r, int c, int[][] grid , int dp[][][]){
        if(j1<0 || j2<0 || j1>=c || j2>=c) return -100000007;
        if(i == r-1) {
            if(j1==j2) return grid[i][j1];
            else return grid[i][j1] + grid[i][j2];
        }
        if(dp[i][j1][j2] != 0) return dp[i][j1][j2];
        int maxi = -1000000007;
        for(int dj1 = -1 ; dj1<= +1 ;dj1++ ){
            for( int dj2 = -1 ; dj2<= +1 ;dj2++){
                int value =0;
                if(j1== j2 ) return grid[i][j1];
                else value = grid[i][j1] + grid[i][j2];
                value += f(i+1, j1+dj1 ,j2+dj2,r,c,grid,dp);
                maxi = Math.max(maxi,value);
            }
        }
        return dp[i][j1][j2] = maxi;
    }
	public static int maximumChocolates(int r, int c, int[][] grid) {
		// Write your code here.
        int dp[][][] = new int[r][c][c];
        return f(0,0,c-1, r,c,grid,dp);
	}
}
